name: Build Windows MSI Installer

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  # Allow manual triggering of the workflow
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc
        components: rustfmt, clippy
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Install WiX Toolset
      run: |
        $wixToolsetUrl = "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311.exe"
        Invoke-WebRequest -Uri $wixToolsetUrl -OutFile wix311.exe
        Start-Process -FilePath .\wix311.exe -ArgumentList "/install","/quiet" -NoNewWindow -Wait
        echo "$env:WIX\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    
    - name: Install cargo-wix
      run: cargo install cargo-wix
    
    - name: Install OpenSSL (Windows)
      run: |
        choco install openssl -y
        echo "OPENSSL_DIR=C:\Program Files\OpenSSL-Win64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "OPENSSL_LIB_DIR=C:\Program Files\OpenSSL-Win64\lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "OPENSSL_INCLUDE_DIR=C:\Program Files\OpenSSL-Win64\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    
    - name: Build Release Binary
      run: |
        # Set RUSTFLAGS to help with Windows compilation
        $env:RUSTFLAGS="-C target-feature=+crt-static"
        cargo build --release
    
    - name: Build MSI Installer
      run: |
        echo "Contents of project directory:"
        Get-ChildItem -Path . -Recurse -Depth 2 | Where-Object { -not $_.PSIsContainer } | Select-Object FullName
        
        echo "Using WiX files in ./wix directory:"
        Get-ChildItem -Path ./wix -Recurse
        
        echo "Package name from Cargo.toml:"
        (Get-Content -Path Cargo.toml | Select-String -Pattern "^name = ").Line
        
        # Run cargo wix with debugging output and fallback to default package name
        cargo wix --nocapture --force --no-build --installer --output target/wix/
    
    - name: List MSI files
      run: |
        Get-ChildItem -Path target\wix -Recurse -Filter *.msi | ForEach-Object { Write-Output $_.FullName }
    
    - name: Create installer directory
      run: mkdir -p installer
    
    - name: Copy MSI to installer directory
      run: |
        $msiFile = Get-ChildItem -Path target\wix -Recurse -Filter *.msi | Select-Object -First 1
        $version = (Get-Date -Format "yyyy.MM.dd.HHmm")
        $newName = "ZLT-System-Monitor-$version.msi"
        Copy-Item -Path $msiFile.FullName -Destination "installer\$newName"
        echo "MSI_PATH=installer\$newName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    
    - name: Upload MSI Artifact
      uses: actions/upload-artifact@v4
      with:
        name: zlt-windows-installer
        path: installer/*.msi
        retention-days: 90

    # Create GitHub Release if this is a tag
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: installer/*.msi
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
